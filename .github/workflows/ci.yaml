name: CI
on:
  pull_request:
    branches:
      - main

env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ secrets.DB_PORT }}
  BRONZE_DB_HOST: ${{ secrets.BRONZE_DB_HOST }}
  BRONZE_DB: ${{ secrets.BRONZE_DB }}
  SILVER_DB_HOST: ${{ secrets.SILVER_DB_HOST }}
  SILVER_DB: ${{ secrets.SILVER_DB }}
  GOLD_DB_HOST: ${{ secrets.GOLD_DB_HOST }}
  GOLD_DB: ${{ secrets.GOLD_DB }}
  MLFLOW_DB_HOST: ${{ secrets.MLFLOW_DB_HOST }}
  MLFLOW_DB: ${{ secrets.MLFLOW_DB }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
  TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
  TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
  TEST_DB: ${{ secrets.TEST_DB }}
  TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}


jobs:
  lint:
    name: Lint with Ruff, Black, and MyPy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup environment variables
        run: |
          chmod +x app/scripts/setup_env.sh
          ./app/scripts/setup_env.sh

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit hooks with CI config (no auto-fix)
        run: pre-commit run --all-files --config .pre-commit-config-ci.yaml

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      # Two reasons for matrix split:
      #   1. Faster feedback - unit tests don't waste time installing Airflow
      #   2. Isolation - Airflow DAG parsing is test separately with its own deps
      matrix:
        kind: [unit, dag]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup environment variables
        run: |
          chmod +x app/scripts/setup_env.sh
          ./app/scripts/setup_env.sh

      - name: Install dependencies
        run: |

          python -m pip install --upgrade pip
          if [ "${{ matrix.kind }}" = "unit" ]; then
            # dev.txt includes base.txt
            pip install -r requirements/dev.txt
          else
            pip install -r requirements/dev.txt -r requirements/airflow.txt
          fi

      - name: Run tests and code coverage
        env:
          AIRFLOW_HOME: ${{ runner.temp }}/airflow
          AIRFLOW__CORE__DAGS_FOLDER: ${{ github.workspace}}/app/dags # Where to find DAG defintions
        run: |
          # create a temp directory so tests don't pollute the repo
          mkdir -p "$AIRFLOW_HOME"
          if [ "${{ matrix.kind }}" = "unit" ]; then
            pytest --cov=app --cov-report=xml --cov-report=html -q -k "not test_airflow"
          else
            pytest -q app/tests/test_airflow
          fi
