name: CI
on:
  pull_request:
    branches:
      - main

env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ secrets.DB_PORT }}
  BRONZE_DB_HOST: ${{ secrets.BRONZE_DB_HOST }}
  BRONZE_DB: ${{ secrets.BRONZE_DB }}
  SILVER_DB_HOST: ${{ secrets.SILVER_DB_HOST }}
  SILVER_DB: ${{ secrets.SILVER_DB }}
  GOLD_DB_HOST: ${{ secrets.GOLD_DB_HOST }}
  GOLD_DB: ${{ secrets.GOLD_DB }}
  MLFLOW_DB_HOST: ${{ secrets.MLFLOW_DB_HOST }}
  MLFLOW_DB: ${{ secrets.MLFLOW_DB }}
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
  TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
  TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
  TEST_DB: ${{ secrets.TEST_DB }}
  TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}


jobs:
  lint:
    name: Lint with Ruff, Black, and MyPy
    runs-on: ubuntu-latest
    container:
        image: python:3.11-alpine
        options: --user root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apk add --no-cache bash git

      - name: Make setup_env.sh executable
        run: chmod +x app/scripts/setup_env.sh

      - name: Create .env file
        run: ./app/scripts/setup_env.sh

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit hooks with CI config (no auto-fix)
        run: pre-commit run --all-files --config .pre-commit-config-ci.yaml

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    container:
        image: python:3.11-alpine
        options: --user root

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        # build-base enables compiling of Python packages with C extensions
        # libffi-dev: some Python packages use FFI to call C libraries
        run: |
          apk add --no-cache bash git build-base postgres-dev libffi-dev

      - name: Make setup_env.sh executable
        run: chmod +x app/scripts/setup_env.sh

      - name: Create .env file
        run: ./app/scripts/setup_env.sh

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and code coverage
        run: |
          pytest --cov=app --cov-report=xml --cov-report=html
