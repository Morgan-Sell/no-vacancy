[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "no-vacancy"
version = "0.0.0"
description = "A machine learning model to predict the likelihood of a guest cancelling their hotel reservation."
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
keywords = ["machine_learning", "python", "docker", "web_server"]
authors = [
    { name = "Morgan Sell", email = "morganpsell@gmail.com"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
]


[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["app", "tests"]
addopts = [
    "--cov=app",
    "--cov-report=term-missing"
]


[tool.coverage.run]
branch = true
source = ["app"]
omit = ["app/main.py"]


[tool.ruff]
target-version = "py311"
line-length = 88 # match black's line length
fix = false # black handles it
exclude = ["tests/"]


[tool.ruff.lint]
select = [
  "E", # Enforces pycodestyle error codes (like PEP 8).
  "F", # Runs pyflakes for identifying unused imports and variables.
  "W", # Warnings for pycodestyle
  "B", # Runs flake8-bugbear for finding potential bugs.
  "I", # isort
] 
# E501: ignore line length (handled by black)
ignore = ["E501"] 


[tool.black]
line-length = 88 # Standard PEP8 line length
target-version = ["py311"]
skip-string-normalization = false # If true, black won't normalize quotes


[tool.isort]
multi_line_output = 3 # Use vertical hanging indent style
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88