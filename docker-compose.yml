# Docker Compose file for the NoVacancy application
services:
  bronze-db:
    image: postgres:latest
    container_name: bronze-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${BRONZE_DB}
    ports:
      - "5433:5432"
    volumes:
      - bronze_data:/var/lib/postgresql/data

  silver-db:
    image: postgres:latest
    container_name: silver-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${SILVER_DB}
    ports:
      - "5434:5432"
    volumes:
      - silver_data:/var/lib/postgresql/data

  gold-db:
    image: postgres:latest
    container_name: gold-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${GOLD_DB}
    ports:
      - "5435:5432"
    volumes:
      - gold_data:/var/lib/postgresql/data

  test-db:
    image: postgres:latest
    container_name: test-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB}
    ports:
      - "5436:5432"
    # volumes as test data should not persist


  mlflow-db:
    image: postgres:latest
    container_name: mlflow-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${MLFLOW_DB}
    ports:
      - "5437:5432"
    volumes:
      - mlflow_data:/var/lib/postgresql/data


  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    ports:
      - "5001:5000"
    depends_on:
      - mlflow-db
    env_file:
      - .env
    volumes:
      - ./mlruns:/mlflow/mlruns
    command: [
      "mlflow", "server",
      "--backend-store-uri", "postgresql://${DB_USER}:${DB_PASSWORD}@mlflow-db:5432/${MLFLOW_DB}",
      "--default-artifact-root", "/mlflow/mlruns",
      "--host", "0.0.0.0"
    ]

  training-container:
    build:
      context: .
      dockerfile: Dockerfile.training
    container_name: novacancy-training
    depends_on:
      - bronze-db
      - silver-db
      - gold-db
      - mlflow-db
      - mlflow
    env_file:
      - .env
    volumes:
      - ./data:/app/data # TODO: Confirm if needed given that script imports data into Bronze DB
    environment:
      CONTAINER_TYPE: training
      DATA_DIR: ./data
      BRONZE_DB_HOST: bronze-db
      SILVER_DB_HOST: silver-db
      GOLD_DB_HOST: gold-db
      MLFLOW_TRACKING_URI: http://mlflow:5000
    # Run once and exit (for manual training)
    profiles:
      - training
    # Define behavior here. "What should this container do in this evnvironment?"
    command: /bin/bash -c "python scripts/import_csv_to_postgres.py && \
                          python services/training_orchestrator.py"

  inference-container:
    build:
      context: .
      dockerfile: Dockerfile.inference
    container_name: novacancy-inference
    ports:
      - 8000:8000
    depends_on:
      - bronze-db
      - silver-db
      - gold-db
      - mlflow-db
      - mlflow
    env_file:
      - .env
    environment:
      BRONZE_DB_HOST: bronze-db
      SILVER_DB_HOST: silver-db
      GOLD_DB_HOST: gold-db
      MLFLOW_TRACKING_URI: http://mlflow:5000
    # Always running
    restart: unless-stopped

volumes:
  bronze_data:
  silver_data:
  gold_data:
  mlflow_data:
